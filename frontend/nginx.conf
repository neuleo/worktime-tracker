server {
    listen 3000;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # NEVER cache HTML files - always serve fresh
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT";
        add_header Last-Modified $date_gmt;
        add_header ETag "";
        if_modified_since off;
        expires off;
        etag off;
        try_files $uri $uri/ /index.html;
    }

    # Handle the root path specifically 
    location = / {
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT";
        add_header Last-Modified $date_gmt;
        add_header ETag "";
        if_modified_since off;
        expires off;
        etag off;
        try_files /index.html =404;
    }

    # JavaScript files - allow some caching but with validation
    location ~* \.js$ {
        add_header Cache-Control "public, max-age=300, must-revalidate"; # 5 minutes
        expires 5m;
    }

    # CSS files - allow some caching but with validation
    location ~* \.css$ {
        add_header Cache-Control "public, max-age=300, must-revalidate"; # 5 minutes
        expires 5m;
    }

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/plain
        text/css
        text/js
        text/xml
        text/javascript;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com" always;

    # PWA specific headers
    location /manifest.json {
        add_header Content-Type application/manifest+json;
        add_header Cache-Control "public, max-age=86400"; # 1 day
    }

    location /sw.js {
        add_header Content-Type application/javascript;
        add_header Cache-Control "public, max-age=0, must-revalidate";
        expires off;
    }

    # Static assets (icons) - longer caching
    location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400"; # 1 day
    }

    # Handle client-side routing (fallback to index.html)
    location / {
        try_files $uri $uri/ @fallback;
    }

    # Fallback for client-side routing
    location @fallback {
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT";
        rewrite ^.*$ /index.html last;
    }

    # API proxy with strict no-cache headers
    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Strict no-cache for API responses
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT";
        
        # Disable proxy caching
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # Disable server signature
    server_tokens off;

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}